<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Interactive Calendar</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
        }

        h1 {
            color: #333;
        }

        .calendar {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 10px;
            max-width: 600px;
            margin-top: 20px;
        }

        .calendar div {
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 5px;
            height: 50px;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }

        .calendar div:hover {
            background-color: #ddd;
        }

        .day-header {
            font-weight: bold;
            color: #555;
        }

        .selected {
            background-color: #4caf50 !important;
            color: #fff;
        }

        .navigation {
            display: flex;
            justify-content: space-between;
            max-width: 600px;
            width: 100%;
            margin-top: 10px;
        }

        .nav-btn {
            background-color: #4caf50;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }

        .nav-btn:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <h1>My Calendar</h1>
    <div class="navigation">
        <button class="nav-btn" id="prevMonth">Previous</button>
        <div id="monthYear"></div>
        <button class="nav-btn" id="nextMonth">Next</button>
    </div>
    <div class="calendar" id="calendar"></div>

    <script>
        const calendarElement = document.getElementById('calendar');
        const monthYearElement = document.getElementById('monthYear');
        const prevMonthBtn = document.getElementById('prevMonth');
        const nextMonthBtn = document.getElementById('nextMonth');

        let currentDate = new Date();

        // Generate calendar for the current month
        function generateCalendar(date) {
            calendarElement.innerHTML = ''; // Clear the calendar
            const month = date.getMonth();
            const year = date.getFullYear();

            monthYearElement.textContent = `${date.toLocaleString('default', { month: 'long' })} ${year}`;

            const firstDay = new Date(year, month, 1).getDay();
            const daysInMonth = new Date(year, month + 1, 0).getDate();

            // Add day headers
            const dayHeaders = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
            dayHeaders.forEach(day => {
                const dayElement = document.createElement('div');
                dayElement.textContent = day;
                dayElement.classList.add('day-header');
                calendarElement.appendChild(dayElement);
            });

            // Add empty spaces for days before the first day of the month
            for (let i = 0; i < firstDay; i++) {
                const emptyCell = document.createElement('div');
                calendarElement.appendChild(emptyCell);
            }

            // Add days of the month
            for (let day = 1; day <= daysInMonth; day++) {
                const dayElement = document.createElement('div');
                dayElement.textContent = day;
                dayElement.addEventListener('click', () => {
                    document.querySelectorAll('.calendar div').forEach(div => div.classList.remove('selected'));
                    dayElement.classList.add('selected');
                });
                calendarElement.appendChild(dayElement);
            }
        }

        // Event listeners for navigation
        prevMonthBtn.addEventListener('click', () => {
            currentDate.setMonth(currentDate.getMonth() - 1);
            generateCalendar(currentDate);
        });

        nextMonthBtn.addEventListener('click', () => {
            currentDate.setMonth(currentDate.getMonth() + 1);
            generateCalendar(currentDate);
        });

        // Initialize calendar
        generateCalendar(currentDate);
    </script>
</body>
</html>
